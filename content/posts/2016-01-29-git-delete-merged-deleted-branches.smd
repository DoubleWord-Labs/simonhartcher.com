---
.date = "2016-01-29",
.title = "Git: Delete Merged/Deleted Branches",
.description = "",
.tags = [],
.author = "Simon Hartcher",
.layout = "post.shtml",
.aliases = ["git-delete-merged-deleted-branches/index.html"],
.custom = {
  .cover = "<picture><source type='image/webp' srcset='/posts/2016-01-29-git-delete-merged-deleted-branches/cover-thumbnail.webp 300w, /posts/2016-01-29-git-delete-merged-deleted-branches/cover-small.webp 600w, /posts/2016-01-29-git-delete-merged-deleted-branches/cover-medium.webp 900w, /posts/2016-01-29-git-delete-merged-deleted-branches/cover-large.webp 1200w, /posts/2016-01-29-git-delete-merged-deleted-branches/cover-xlarge.webp 1800w,' sizes='100vw'><img src='/posts/2016-01-29-git-delete-merged-deleted-branches/cover-xlarge.webp' alt='Image' class='cover'></picture>",
},
---


There are many guides out there on how to delete branches from your local git repository that have been merged on the remote. Here I provide a _simple_ alias that doesn’t make your brain bleed. In our workflow we always delete merged feature branches so this works perfectly for us.


This assumes that you have installed `git-up`. This is only tested using [PyGitUp](https://github.com/msiemens/PyGitUp), and not the original [git-up](https://github.com/aanand/git-up/) so your mileage may vary.


```bash
git up | tail -n+2 | grep "error: remote branch doesn't exist" | awk -F' ' '{print $1}' | xargs -n 1 git branch -d
```


I have this aliased as `git dm` (for “delete missing” or “delete merged”).


PS. If you didn’t have `git-up` already, you’re welcome. It’s awesome.


