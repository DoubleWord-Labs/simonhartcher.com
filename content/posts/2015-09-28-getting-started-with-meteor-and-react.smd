---
.date = "2015-09-28",
.title = "Getting Started With Meteor and React",
.description = "Now with more ES6",
.tags = [],
.author = "Simon Hartcher",
.layout = "post.shtml",
.aliases = ["getting-started-with-meteor-and-react.html"],
.custom = {
  .cover = "<picture><source type='image/webp' srcset='cover-thumbnail.webp 300w, cover-small.webp 600w, cover-medium.webp 900w, cover-large.webp 1200w,' sizes='100vw'><img src='cover-large.webp' alt='Image' class='cover'></picture>",
},
---


This article is an extension of [Getting started with Meteor and React](http://sergiotapia.me/2015/09/18/react-and-meteor-match-made-in-heaven/), except that I’ve modified the code to work with ES6.


There’s no extra configuration as the `react` plugin transpiles ES6 out of the box. However I’ve had to include one extra file: `libs/methods.js` which enables Meteor to access my `React.Component` classes, since they are contained within closures by default.


### lib/methods.js


```
registerComponent = (component) => window[component.name] = component;
```


So that you can do this in parallel with the other article, I’ll provide the code in the same order.


### client/main.html


```html
<head>
  <title>Example React App</title>
</head>
<body>
  <section id="react-root"></section>
</body>
```


### client/main.jsx


```javascript
class MainLayout extends React.Component {
  render() {
    return (
      <div>
        <Header />
        <div className="container">
          {this.props.content}
        </div>
        <Footer />
      </div>
    )
  }
}

registerComponent(MainLayout);
```


### lib/router.jsx


```javascript
FlowRouter.route('/', {
  action() {
    ReactLayout.render(MainLayout, { content: <Wall /> });
  }
});
```


### client/layout/header.jsx


```javascript
class Header extends React.Component {
  render() {
    return (
      <header>
        <p>This is the header.</p>
      </header>
    )
  }
}

registerComponent(Header);
```


### client/layout/footer.jsx


```javascript
class Footer extends React.Component {
  render() {
    return (
      <footer>
        <p>This is the footer.</p>
      </footer>
    )
  }
}

registerComponent(Footer);
```


### client/components/wall.jsx


```javascript
class Wall extends React.Component {
  render() {
    return (
      <div>
        <h1>Welcome to the Wall!</h1>
      </div>
    )
  }
}

registerComponent(Wall);
```


