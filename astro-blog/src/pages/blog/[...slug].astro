---
import { type CollectionEntry, getCollection, render } from 'astro:content';
import Base from '../../layouts/Base.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.id.replace('.mdx', '') },
    props: post,
  }));
}

type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await render(post);
---

<Base 
  title={post.data.title}
  description={post.data.description}
  image={post.data.cover}
>
  <article class="blog-post">
    <header class="post-header">
      <h1>{post.data.title}</h1>
      <div class="post-meta">
        <time datetime={post.data.date.toISOString()}>
          {post.data.date.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          })}
        </time>
        <span class="separator">â€¢</span>
        <span class="author">By {post.data.author}</span>
      </div>
      {post.data.tags.length > 0 && (
        <div class="tags">
          {post.data.tags.map((tag) => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      )}
    </header>
    
    <div class="post-content">
      <Content />
    </div>
  </article>
</Base>

<style>
  .blog-post {
    max-width: 65ch;
    margin: 0 auto;
  }
  
  .post-header {
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--pico-border-color);
  }
  
  .post-header h1 {
    margin: 0 0 1rem 0;
    line-height: 1.2;
  }
  
  .post-meta {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--pico-muted-color);
    font-size: 0.9rem;
    margin-bottom: 1rem;
  }
  
  .separator {
    opacity: 0.6;
  }
  
  .tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }
  
  .tag {
    background: var(--pico-secondary-background);
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.8rem;
    color: var(--pico-secondary);
  }
  
  .post-content {
    line-height: 1.7;
  }
  
  .post-content :global(h2) {
    margin-top: 2rem;
    margin-bottom: 1rem;
  }
  
  .post-content :global(h3) {
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }
  
  .post-content :global(p) {
    margin-bottom: 1rem;
  }
  
  .post-content :global(pre) {
    margin: 1.5rem 0;
    border-radius: 0.5rem;
    overflow-x: auto;
  }
  
  .post-content :global(code:not(pre code)) {
    background: var(--pico-code-background-color);
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-size: 0.9em;
  }
  
  .post-content :global(blockquote) {
    margin: 1.5rem 0;
    padding-left: 1rem;
    border-left: 4px solid var(--pico-primary);
    font-style: italic;
  }
  
  .post-content :global(ul, ol) {
    margin-bottom: 1rem;
  }
  
  .post-content :global(li) {
    margin-bottom: 0.5rem;
  }
</style>