---
import '../pico.violet.min.css';
import '../styles.css';

export interface Props {
  title: string;
  description?: string;
  image?: string;
}

const { title, description = "Simon Hartcher's Blog", image } = Astro.props;
const siteTitle = "Simon Hartcher";
const fullTitle = title ? `${title} | ${siteTitle}` : siteTitle;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="color-scheme" content="light dark">
    <meta name="description" content={description}>
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="@deevus">
    <meta name="twitter:author" content="@deevus">
    <meta name="twitter:description" content={description}>
    <meta name="twitter:title" content={fullTitle}>
    {image && <meta name="twitter:image" content={image}>}
    <meta property="og:type" content="website">
    <meta property="og:title" content={fullTitle}>
    {image && <meta property="og:image" content={image}>}
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>{fullTitle}</title>
    <link rel="alternate" type="application/rss+xml" title="Simon Hartcher's Blog RSS Feed" href="/index.xml">
    <script defer src="/main.min.js"></script>
  </head>
  <body>
    <div x-data="{ open: false }">
      <form method="post" action="https://listmonk.simonhartcher.com/subscription/form" class="listmonk-form">
        <dialog :open="open">
          <article>
            <header>
              <button aria-label="Close" rel="prev" @click="open = false"></button>
              <h3>Subscribe for more content delivered to your inbox! ðŸŽ‰</h3>
            </header>
            <input type="hidden" name="nonce">
            <p><input type="email" name="email" required placeholder="E-mail"></p>
            <p><input type="text" name="name" placeholder="Name (optional)"></p>
            <input id="261b8" type="hidden" name="l" value="261b8248-9c4e-4ab5-a843-d95fab76fee3">
            <footer>
              <button type="submit" style="margin-bottom: 0">Subscribe</button>
            </footer>
          </article>
        </dialog>
      </form>
      <nav class="nav__horizontal">
        <ul>
          <li id="nav-title"><a href="/"><strong>{siteTitle}</strong></a></li>
        </ul>
        <ul>
          <li><a href="/">Home</a></li>
          <li><a href="/about">About</a></li>
          <li><a href="/contact">Contact</a></li>
          <li><a href="/subscribe" @click="open = true" onclick="return false">Subscribe</a></li>
        </ul>
      </nav>
      <aside class="nav__vertical">
        <nav>
          <ul>
            <li id="nav-title"><a href="/"><strong>{siteTitle}</strong></a></li>
          </ul>
          <ul>
            <li><a href="/">Home</a></li>
            <li><a href="/about">About</a></li>
            <li><a href="/contact">Contact</a></li>
            <li><a href="/subscribe" @click="open = true" onclick="return false">Subscribe</a></li>
          </ul>
        </nav>
      </aside>
    </div>
    <main id="content" class="container">
      <slot />
    </main>
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-M5R396MEP8"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'G-M5R396MEP8');
    </script>
    <script>
      !function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){function g(t,e){var o=e.split(".");2==o.length&&(t=t[o[0]],e=o[1]),t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement("script")).type="text/javascript",p.crossOrigin="anonymous",p.async=!0,p.src=s.api_host.replace(".i.posthog.com","-assets.i.posthog.com")+"/static/array.js",(r=t.getElementsByTagName("script")[0]).parentNode.insertBefore(p,r);var u=e;for(void 0!==a?u=e[a]=[]:a="posthog",u.people=u.people||[],u.toString=function(t){var e="posthog";return"posthog"!==a&&(e+="."+a),t||(e+=" (stub)"),e},u.people.toString=function(){return u.toString(1)+".people (stub)"},o="init capture register register_once register_for_session unregister unregister_for_session getFeatureFlag getFeatureFlagPayload isFeatureEnabled reloadFeatureFlags updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures on onFeatureFlags onSessionId getSurveys getActiveMatchingSurveys renderSurvey canRenderSurvey getNextSurveyStep identify setPersonProperties group resetGroups setPersonPropertiesForFlags resetPersonPropertiesForFlags setGroupPropertiesForFlags resetGroupPropertiesForFlags reset get_distinct_id getGroups get_session_id get_session_replay_url alias set_config startSessionRecording stopSessionRecording sessionRecordingStarted captureException loadToolbar get_property getSessionProperty createPersonProfile opt_in_capturing opt_out_capturing has_opted_in_capturing has_opted_out_capturing clear_opt_in_out_capturing debug".split(" "),n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}(document,window.posthog||[]);
      posthog.init('phc_gzmQetR04l175u1OwF6SEb0kLGQusXUIBGjTTcSyV2j', {api_host: 'https://us.i.posthog.com'})
    </script>
  </body>
</html>