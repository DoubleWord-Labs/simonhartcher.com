---
import { getCollection } from "astro:content";
import Base from "../layouts/Base.astro";
import {
    getPostUrl,
    getCoverImageUrl,
    getResponsiveImagePaths,
    getPostCoverImage,
} from "../utils/blog";
import { Image } from "astro:assets";

// Get blog posts
const posts = await getCollection("blog");
const allPosts = posts
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

const featuredPosts = allPosts.filter((post) => post.data.featured);
---

<Base
    title="Simon Hartcher"
    description="Simon Hartcher's Blog - Software Development, Web Development, and Technology"
>
    <main id="page">
        <!-- Page content would go here if this was a content page -->
    </main>

    {
        featuredPosts.length > 0 && (
            <>
                <h1>Featured</h1>
                {featuredPosts.map((post) => {
                    const coverImage = getPostCoverImage(post);

                    return (
                        <article class="blog-post__featured">
                            <a href={getPostUrl(post)}>
                                {coverImage && (
                                    <picture>
                                        <img
                                            src={coverImage.src}
                                            alt="Cover image"
                                            class="cover"
                                        />
                                    </picture>
                                )}
                            </a>
                            <div class="blog-post__card__content">
                                <a
                                    href={getPostUrl(post)}
                                    class="blog-post-card"
                                    aria-label={`Read ${post.data.title}`}
                                >
                                    <h5>{post.data.title}</h5>
                                </a>
                                {post.data.description && (
                                    <p>{post.data.description}</p>
                                )}
                                <aside>
                                    <small>
                                        Published on
                                        <time
                                            datetime={post.data.date.toISOString()}
                                        >
                                            {post.data.date.toLocaleDateString(
                                                "en-US",
                                                {
                                                    day: "numeric",
                                                    month: "long",
                                                    year: "numeric",
                                                },
                                            )}
                                        </time>
                                        by
                                        <a href="/about">
                                            <strong>{post.data.author}</strong>
                                        </a>
                                    </small>
                                </aside>
                            </div>
                        </article>
                    );
                })}
            </>
        )
    }

    <h1>Recent Posts</h1>
    {
        allPosts.map((post) => {
            const imagePaths = getResponsiveImagePaths(post);
            return (
                <article class="blog-post__card">
                    <a
                        href={getPostUrl(post)}
                        class="blog-post__card__cover-thumb__container"
                    >
                        <Image
                            class="blog-post__card__cover-thumb"
                            src={getPostCoverImage(post)!}
                            alt="Cover image"
                            densities={[1.5, 2.0]}
                        />
                    </a>
                    <div class="blog-post__card__content">
                        <a
                            href={getPostUrl(post)}
                            class="blog-post-card"
                            aria-label={`Read ${post.data.title}`}
                        >
                            <h5>{post.data.title}</h5>
                        </a>
                        {post.data.description && (
                            <p>{post.data.description}</p>
                        )}
                        <aside>
                            <small>
                                Published on
                                <time datetime={post.data.date.toISOString()}>
                                    {post.data.date.toLocaleDateString(
                                        "en-US",
                                        {
                                            day: "numeric",
                                            month: "long",
                                            year: "numeric",
                                        },
                                    )}
                                </time>
                                by
                                <a href="/about">
                                    <strong>{post.data.author}</strong>
                                </a>
                            </small>
                        </aside>
                    </div>
                </article>
            );
        })
    }
</Base>
