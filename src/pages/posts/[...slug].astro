---
import { type CollectionEntry, getCollection, render } from "astro:content";
import { Image } from "astro:assets";
import Base from "../../layouts/Base.astro";
import Comments from "../../components/Comments.tsx";
import "../../components/Comments.css";
import {
    getPostSlug,
    getCoverImageUrl,
    getPostCoverImage,
} from "../../utils/blog";

export async function getStaticPaths() {
    const posts = await getCollection("blog");
    return posts.map((post) => ({
        params: { slug: getPostSlug(post.id) },
        props: post,
    }));
}

const post = Astro.props;
const { Content } = await render(post);

const coverImage = getPostCoverImage(post);
---

<Base
    title={post.data.title}
    description={post.data.description}
    image={getCoverImageUrl(post.data.cover)}
>
    <article class="blog-post">
        {
            coverImage && (
                <div class="cover-image">
                    <Image src={coverImage} alt="Cover image" class="cover" />
                </div>
            )
        }

        <header class="post-header">
            <h1>{post.data.title}</h1>
            <div class="post-meta">
                <time datetime={post.data.date.toISOString()}>
                    {
                        post.data.date.toLocaleDateString("en-US", {
                            year: "numeric",
                            month: "long",
                            day: "numeric",
                        })
                    }
                </time>
                <span class="separator">â€¢</span>
                <span class="author">By {post.data.author}</span>
            </div>
            {
                post.data.tags.length > 0 && (
                    <div class="tags">
                        {post.data.tags.map((tag) => (
                            <span class="tag">{tag}</span>
                        ))}
                    </div>
                )
            }
        </header>

        <div class="post-content">
            <Content />
        </div>

        <!-- Comments Section -->
        <Comments client:visible postTitle={post.data.title} />
    </article>
</Base>
